#!/usr/bin/env bash

#
# NOTE: bin/compile <build-dir> <cache-dir> <config-var-dir>
#

# The actual purpose of this function is not to print the configuation variable,
# but to show how to access them.
dump_config_vars() {
    echo "Config vars: "
    for file in $(ls "${CONFIG_VAR_DIR}"); do
	echo -n "${file}="
	cat "${CONFIG_VAR_DIR}/${file}"
	echo
    done
}

# Function to create a shell variable for a config variable.
# Take variable's name in $1
# WARN: Uses the evil eval.
setup_var() {
    eval ${1}=$(cat "${CONFIG_VAR_DIR}/${1}")
}

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

############ End of function section

# Getting this script's path (note: bashism)
SCRIPT_DIR="$(dirname ${BASH_SOURCE[0]})";

# Sourcing some common configurations
source "${SCRIPT_DIR}/common"

# Setting variables from arguments
BUILD_DIR=$1
CACHE_DIR=$2
CONFIG_VAR_DIR=$3

# Setting variables from heroku's configuration vartiable.
for var in ${CONFIG_VARIABLES}; do 
    setup_var "$var"
done
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack

CL_DIR="$CACHE_DIR/$CL_IMPL"
echo "-----> compile params: $BUILD_DIR $CACHE_DIR $CONFIG_VAR_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

case $CL_IMPL in
  sbcl)
    S3_BUCKET="sbcl-heroku"
    CL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/sbcl-1.0.54-x86-64-linux-binary.tar.bz2"
    DECOMPRESS="tar xjf - -C $CL_DIR"
    ;;
  ccl)
    S3_BUCKET="cl-heroku"
    CL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/ccl-1.7.tgz"
    DECOMPRESS="tar xzf - -C $CL_DIR"
    export CCL_DEFAULT_DIRECTORY=$CL_DIR # overwrite CCL_DEFAULT_DIRECTORY on ccl64
    ;;
  *)
    echo "-----> ! Please set CL_IMPL: heroku config:add CL_IMPL={sbcl|ccl}."
    exit 1
esac

case $CL_WEBSERVER in
  hunchentoot)
    ;;
  aserve)
    # setting up paths for building
    echo "-----> Getting patched versions of libraries"
    
    mkdir $CACHE_DIR/repos    # should be under an if to avoid error
    pushd $CACHE_DIR/repos
    
    if [ -d $CACHE_DIR/repos/portableaserve ]; then
         echo 'aserve already present'
         pushd portableaserve
         git pull origin master
         popd
    else 
        git clone git://github.com/mtravers/portableaserve.git
    fi
    
    if [ -d $CACHE_DIR/repos/wuwei ]; then
         echo 'wuwei already present'
         pushd wuwei
         git pull origin master
         popd
    else 
        git clone git://github.com/mtravers/wuwei.git
    fi
    
    popd
    ;;
  *)
    echo "-----> ! Please set CL_WEBSERVER: heroku config:add CL_WEBSERVER={hunchentoot|aserve}."
    exit 1
esac

echo "-----> Installing $CL_IMPL"
if [ ! -d $CL_DIR ]; then
    echo "-----> Fetching $CL_IMPL"
    mkdir -p $CL_DIR  && curl $CL_PACKAGE -s -o -  | $DECOMPRESS
fi

# add to slug 
cp -r $CL_DIR $BUILD_DIR

echo "$CL_IMPL installed" | indent

export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR
export CL_WEBSERVER

echo "-----> Starting build"
case $CL_IMPL in
  sbcl) sh $CL_DIR/sbcl-1.0.54-x86-64-linux/run-sbcl.sh --load "$BUILDPACK_DIR/setup/compile.lisp";;
  ccl) $CCL_DEFAULT_DIRECTORY/scripts/ccl64 -l "$BUILDPACK_DIR/setup/compile.lisp";;
esac
echo "-----> Build finished"

chmod a+x $BUILD_DIR/lispapp

